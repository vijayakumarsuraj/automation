-# Renders the table that contains test results.

-# test_results - local variable provided by the calling template.
-# table_name - local variable provided by the calling template.
-# table_title - local variable provided by the calling template.
-# reduced_datatable - local variable provided by the calling template.

- unless defined? reduced_datatable then reduced_datatable = false end
- unless defined? show_count then show_count = true end

- paginate = reduced_datatable ? 'false' : 'true'
- info = reduced_datatable ? 'false' : 'true'
- filter = reduced_datatable ? 'false' : 'true'

- run_result = @content[:run_result]
- run_config = run_result.run_config
- application_name = run_config.application.application_name

- container_id = "table_container_#{table_name}"
- table_id = "table_#{table_name}"

- selectable = !@user.nil?

- show_passing_tests_enabled = scoped_setting('show_passing_tests_enabled', application_name)
- show_passing_tests_enabled = to_boolean(show_passing_tests_enabled, false)
- show_passing_tests_enabled = !reduced_datatable && show_passing_tests_enabled
- show_passing_tests = to_boolean(scoped_setting('show_passing_tests', application_name), false)

- if show_passing_tests_enabled && !show_passing_tests
  - test_results = test_results_filter(test_results)

:javascript
  $(document).ready(function() {
    $("##{table_id}").dataTable($.extend({}, dataTableDefaults, {
      "bPaginate": #{paginate},
      "bFilter": #{filter},
      "bInfo": #{info},
    }));
  });
.table_container.tests_table{id: container_id}
  .table_title_bar
    %span.table_title
      = table_title
      - if show_count
        = "(#{test_results.length})"
    %span.table_info
      - if show_passing_tests_enabled
        - show_passing_flag = show_passing_tests ? 'false' : 'true'
        - show_passing_text2 = show_passing_tests ? 'Show failures only' : 'Show all'
        (
        %a{href: "javascript:postShowPassingTests('#{link('settings', application_name)}', '#{show_passing_flag}');"}><
          = show_passing_text2
        )
    %span.table_actions
      - if @user && run_result.status != Automation::Status::Complete
        - run_name = run_result.run_name
        - checkbox_name = run_name
        %a.table_action{href: "javascript:postRunAction('#{link("run/#{run_name}/stop")}', '#{checkbox_name}');"}
          %span Stop
  .table_data
    %table.results{id: table_id}
      %thead
        %tr.tests_table.header
          %td{style: 'min-width: 15px;'}
          %td{style: 'min-width: 15px;'}
          %td
          %td{width: '100%'}
          %td
      %tbody
        - test_results.each do |test_result|
          - if test_result.kind_of?(Automation::TestDatabase::Test)
            - args = {locals: {test: test_result, run_config: run_config}}
            = scoped_partial('test/test', application_name, args)
          - else
            - args = {locals: {test_result: test_result, show_run_name: false, show_test_name: true, selectable: selectable}}
            = scoped_partial('test_result/test_result', application_name, args)

